#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Swift Package Manager Test for Mac
summary: |
  Runs Test on your macOS project with Swift Package Manager
description: |
  Runs Swift Package Manager's `swift test` action for macOS app projects.
website: https://github.com/kitasuke/bitrise-step-swift-package-manager-test-for-mac
source_code_url: https://github.com/kitasuke/bitrise-step-swift-package-manager-test-for-mac
support_url: https://github.com/kitasuke/bitrise-step-swift-package-manager-test-for-mac/issues
host_os_tags:
  - osx-10.10

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - test
dependencies:
  - manager: _
    name: xcode
deps:
  check_only:
    - name: xcode
  brew:
    - name: go
toolkit:
  go:
    package_name: github.com/kitasuke/bitrise-step-swift-package-manager-test-for-mac

is_requires_admin_user: false
is_always_run: false
is_skippable: false
run_if: ""

inputs:
  - build_path: ./.build
    opts:
      title: Build Path
      description: |
        A build path, relative to the working directory.
      is_expand: true
      is_required: false
      value_options: []
  - is_skip_build: "no"
    opts:
      title: Skip build
      description: |
        Should skip building the test target?
      value_options:
        - "yes"
        - "no"
  - is_parallel: "no"
    opts:
      title: Parallel test
      description: |
        Should run the tests in parallel?
      value_options:
        - "yes"
        - "no"

outputs:
  - BITRISE_SWIFT_TEST_RESULT: null
    opts:
      title: Result of the tests. 'succeeded' or 'failed'.
      value_options:
        - succeeded
        - failed